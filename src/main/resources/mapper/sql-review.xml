<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="utopia.mapper.ReviewMapper">

   <!-- 리뷰 목록 조회 -->
   <select id="selectReviewList" resultType="utopia.dto.ReviewDto">
      select review_id, review_title, review_contents, review_img, use_perfume, perfume_brand, review_dt
      from t_review
      where deleted_yn = 'N'
     order by review_id desc
   </select>
   
   <!-- (사진 로드 시) 리뷰 아이디에 맞춰 리뷰 정보 조회 -->
   <select id="selectReviewByReviewId" parameterType="int" resultType="utopia.dto.ReviewDto">
   	select review_id, review_title, review_contents, review_img, use_perfume, perfume_brand
   	  from t_review
   	 where review_id = #{reviewId}
   </select>
   
   <!-- 리뷰에 사용된 브랜드 조회 -->
   <select id="openReviewBrand" resultType="utopia.dto.BrandDto">
   	   select brand_name
    	 from t_brand
    	where brand_id = #{brandId}
   </select>
   
   <!-- 리뷰 작성자 조회 -->
  	<select id="openReviewMember" parameterType="int" resultType="utopia.dto.MemberDto">
  	 select member_name
  	   from t_member
  	  where member_id = #{memberId}
  	</select>   
   
   
  
   <!-- 리뷰 작성 -->
   <insert id="insertReview" parameterType="utopia.dto.ReviewDto">
      insert into t_review (review_title, review_contents, review_dt, review_img, use_perfume, perfume_brand, member_name )
      values (#{reviewTitle}, #{reviewContents}, now(), #{reviewImg}, #{usePerfume}, #{perfumeBrand} , #{memberName})
   </insert>

   <!-- 리뷰 상세 조회 -->
   <select id="selectReviewDetail" parameterType="int" resultType="utopia.dto.ReviewDto">
     select review_id, review_title, review_contents, review_dt, review_img, use_perfume, perfume_brand
       from t_review
      where deleted_yn = 'N' 
        and review_id = #{reviewId}
    </select>
     
      <!-- 리뷰 수정 -->
   <update id="updateReview" parameterType="utopia.dto.ReviewDto">
      update t_review
         set review_title = #{reviewTitle}, 
             review_contents = #{reviewContents},
             use_perfume = #{usePerfume},
             review_dt = now(),
             review_id = review_id
       where review_id = #{reviewId}        
   </update>

      <!-- 리뷰 삭제 -->
   <delete id="deleteReview" parameterType="int">
      update t_review
         set deleted_yn = 'Y', 
             review_dt = now(),
             review_id = review_id
       where review_id = #{reviewId}        
   </delete>
</mapper>  